/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inventory.UI;



import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.Properties;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.Message.RecipientType;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

public class PurchasePage extends javax.swing.JPanel {


     Dashboard dashboard;
     Connection Con =  null; 
     PreparedStatement pst = null;
     ResultSet Rs=null;
     Statement st =null;

    
    public PurchasePage(Dashboard dashboard) {
        initComponents();
        this.dashboard = dashboard;
        loadDataSet();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        EmailAddress = new javax.swing.JTextField();
        emailsupbut = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        Recipientemail = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        RecipientName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        purchaseTable = new javax.swing.JTable();
        refreshButton1 = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setText("RESTOCK");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Purchase Product"));

        jLabel3.setText("Email:");

        EmailAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmailAddressKeyReleased(evt);
            }
        });

        emailsupbut.setText("Email Supplier");
        emailsupbut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailsupbutActionPerformed(evt);
            }
        });

        jLabel4.setText("Password:");

        Password.setText("jPasswordField1");

        Recipientemail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RecipientemailKeyReleased(evt);
            }
        });

        jLabel5.setText("Supplier Name:");

        jLabel6.setText("Supplier Email:");

        RecipientName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                RecipientNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(emailsupbut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EmailAddress)
                            .addComponent(Password)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Recipientemail, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RecipientName, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(218, 218, 218)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RecipientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Recipientemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(emailsupbut, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        purchaseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        purchaseTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchaseTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(purchaseTable);

        refreshButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        refreshButton1.setText("REFRESH");
        refreshButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void generaterestockpdf(){
        
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory","root","root");    
            
            
            pst = Con.prepareStatement("select * from products where productsup=? AND productqty < restockqty");
            //Query to Select All products from Supplier X and the Restock Quantity is greater than the Quantity on Hand
            
            
            pst.setString(1,RecipientName.getText());
            //Display 
            Rs= pst.executeQuery();
                    
                    
            String filename = "/Users/adrian/csia/RestockReport.pdf";
            Document doc = new Document();
            
            PdfWriter.getInstance(doc, new FileOutputStream(filename));
            doc.open();
            
            Font f = new Font(Font.FontFamily.HELVETICA, 20, Font.BOLD);
            Font f_head = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD);
            Font f_cell = new Font(Font.FontFamily.HELVETICA, 12);
            
            PdfPTable table = new PdfPTable(3);
            PdfPCell head = new PdfPCell(new Phrase("Product ID", f_head));
            table.addCell(head);
            head = new PdfPCell(new Phrase("Name", f_head));
            table.addCell(head);
            head = new PdfPCell(new Phrase("Order Quantity", f_head));
            table.addCell(head);
            table.setHeaderRows(1);
            
            Paragraph p = new Paragraph("Goods to Restock for " + RecipientName.getText(), f);
            p.setSpacingAfter(36f);
            doc.add(p);
                      
            while (Rs.next()) {
                PdfPCell cell = new PdfPCell(new Phrase(Rs.getString("pid"), f_cell));
                table.addCell(cell);
                
                cell = new PdfPCell(new Phrase(Rs.getString("productname"), f_cell));
                table.addCell(cell);
                
                int instock = Rs.getInt("productqty");
                int restock = Rs.getInt("restockqty");
              
                int amount = restock - instock;
                cell = new PdfPCell(new Phrase(String.valueOf(amount), f_cell));
                table.addCell(cell);
                
            }
          
            table.setSpacingAfter(72f);               
            doc.add(table); 
            
            doc.close();
         
            Con.close();
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);  
        }
       }

     
     
    private void emailsupbutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailsupbutActionPerformed
  
        
        if (EmailAddress.getText().isEmpty() || Password.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Missing email information, please enter.");
        }
        else if (RecipientName.getText().isEmpty()){
                        JOptionPane.showMessageDialog(this, "Missing Recipient email information, please enter.");

        }else{
                {
            generaterestockpdf();
        try {
          
            String username = EmailAddress.getText();
            String password = Password.getText();
            String recepient = Recipientemail.getText();
                    
            Date cur = new Date();
            
            Properties properties = new Properties();
            properties.put("mail.smtp.auth", "true");
            //Specifies whether authentication is required by SMTP server, in this case True
            properties.put("mail.smtp.starttls.enable", "true");
            //Specifies whether or not to use STARTTLS encryption
            properties.put("mail.smtp.host", "smtp.gmail.com");
            //Hostname of the SMTP server used to send outgoing emails
            properties.put("mail.smtp.port", "587");
            //Port number used by SMTP server
            
            Session session = Session.getDefaultInstance(properties, new Authenticator(){
                @Override
                 protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password);
                    //Email Password Authentication Method Is overwritten by New Method
                }
            });
            
            Message message = new MimeMessage(session);
            
            message.setSentDate(cur);
            message.setSubject("Restock Order for " + cur);
            message.setContent("Sent from Inventory Management System.", "text/plain");
            message.setFrom(new InternetAddress(username));
            message.setRecipient(RecipientType.TO, new InternetAddress(recepient));
                        
            Multipart mp = new MimeMultipart();
            MimeBodyPart body = new MimeBodyPart();
            
            File list = new File("/Users/adrian/csia/RestockReport.pdf");
            DataSource ds = new FileDataSource(list);
            body.setDataHandler(new DataHandler(ds));
            body.setFileName(list.getName());
            
            mp.addBodyPart(body);
            
            message.setContent(mp);           
            Transport.send(message);
            JOptionPane.showMessageDialog(this, "Restock List has been sent to "+recepient);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);  
        }
       }
      }
    }//GEN-LAST:event_emailsupbutActionPerformed

    
    
    private void purchaseTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchaseTableMouseClicked
        DefaultTableModel model = (DefaultTableModel)purchaseTable.getModel();
        int MyIndex = purchaseTable.getSelectedRow();
         String searchedname = model.getValueAt(MyIndex, 4).toString();
         try{

            Con = DriverManager.getConnection("jdbc:mysql://localhost/inventory","root","root");
            pst = Con.prepareStatement("select * from suppliers where fullname =?");
            pst.setString(1, searchedname);
            Rs = pst.executeQuery();
            if(Rs.next()){
                String recipientemail = Rs.getString("email");
                Recipientemail.setText(recipientemail);
                String recipientname = Rs.getString("fullname");
                RecipientName.setText(recipientname);
            }

           
        }catch(SQLException ex){
            
        }
    }//GEN-LAST:event_purchaseTableMouseClicked

    private void EmailAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailAddressKeyReleased
       
    }//GEN-LAST:event_EmailAddressKeyReleased

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
 
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void refreshButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButton1ActionPerformed
        loadDataSet();
    
    }//GEN-LAST:event_refreshButton1ActionPerformed

    private void RecipientemailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RecipientemailKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_RecipientemailKeyReleased

    private void RecipientNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RecipientNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_RecipientNameKeyReleased
    public void loadDataSet() {
        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/inventory","root","root");
            st = Con.createStatement();
            Rs = st.executeQuery("select * from Products where productqty < restockqty ");
            purchaseTable.setModel(DbUtils.resultSetToTableModel(Rs));
            Con.close();
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EmailAddress;
    private javax.swing.JPasswordField Password;
    private javax.swing.JTextField RecipientName;
    private javax.swing.JTextField Recipientemail;
    private javax.swing.JButton emailsupbut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable purchaseTable;
    private javax.swing.JButton refreshButton1;
    // End of variables declaration//GEN-END:variables
}
